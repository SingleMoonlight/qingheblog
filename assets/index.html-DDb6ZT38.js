import{_ as i,c as a,a as n,o as e}from"./app-WIG124Xj.js";const t="/assets/1724566152903-9097a26a-e904-4e07-a21a-aa38f9245d67-DXxltsHN.png",p="/assets/1724515046414-81a66c52-b2d3-449c-852e-9599180c6b74-Dk3pZsDh.png",l="/assets/1724515078654-c6bb9880-3054-40a3-80c0-f1b226b34f08-C01-boYK.png",h="/assets/1724515349586-aa0a2e66-128a-4a4f-8bef-95689a90e618-BJkUfLNf.png",r="/assets/1724573710521-620261e8-7390-4205-9e90-d2d4c95d760a-CI0HEArT.png",k="/assets/1724574296334-696c6c6f-f6f7-4bec-92db-138bc8e6e0f3-B41jHCc0.png",d="/assets/1724574215566-e67a5f33-ed35-4d2e-a3b9-9c0afc0987e0-BKuCqF4N.png",o="/assets/1724574337895-a3a8dfd6-93b5-4cfb-9abf-cd51501bd917-FdmlcUz8.png",c="/assets/1724574383478-d0c75435-c6e4-4c17-9b0b-e9a6c695be77-Dic2bpMh.png",g="/assets/1724595799212-3fa5abaf-1efa-4240-a563-d024386eb5f3-DKpiGL_k.png",m="/assets/1725079580304-067e1c4c-b706-441e-9c41-72ed3d066189-DCa2uw-n.png",y={};function b(A,s){return e(),a("div",null,s[0]||(s[0]=[n(`<h2 id="写在前面" tabindex="-1"><a class="header-anchor" href="#写在前面"><span>写在前面</span></a></h2><p>介绍如何在 Docker 中部署 Jenkins，包括拉取镜像、运行容器、配置 Nginx 反向代理、初始化、安装插件、配置管理员信息以及安全设置。</p><h2 id="安装-jenkins-镜像" tabindex="-1"><a class="header-anchor" href="#安装-jenkins-镜像"><span>安装 Jenkins 镜像</span></a></h2><h3 id="拉取镜像" tabindex="-1"><a class="header-anchor" href="#拉取镜像"><span>拉取镜像</span></a></h3><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">docker</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> pull</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> jenkins/jenkins:lts</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>目前 docker 被墙，使用 docker pull 拉取 certbot 镜像会失败，可以使用自行查找第三方镜像仓库。</p><p>我这里使用的是阿里云的镜像加速服务：</p><blockquote><p>当前仅支持阿里云用户使用具备公网访问能力的阿里云产品进行镜像加速，且仅限于特定范围内的容器镜像。详情请见<a href="https://help.aliyun.com/zh/acr/product-overview/product-change-acr-mirror-accelerator-function-adjustment-announcement" target="_blank" rel="noopener noreferrer">公告</a>。</p></blockquote><h3 id="运行-jenkins-容器" tabindex="-1"><a class="header-anchor" href="#运行-jenkins-容器"><span>运行 Jenkins 容器</span></a></h3><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">docker</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> run</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -it</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -d</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> \\</span></span>
<span class="line"><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">   --name</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> jenkins</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> \\</span></span>
<span class="line"><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">   -p</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> 18080:8080</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> \\</span></span>
<span class="line"><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">   -p</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> 50000:50000</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> \\</span></span>
<span class="line"><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">   -v</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> your_host_jenkins_home_dir:/var/jenkins_home</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> \\</span></span>
<span class="line"><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">   -e</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> JENKINS_URL=your_domain</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> \\</span></span>
<span class="line"><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">   -e</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> JAVA_OPTS=-Dhudson.security.csrf.GlobalCrumbIssuerConfiguration.DISABLE_CSRF_PROTECTION=</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">true</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> \\</span></span>
<span class="line"><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">   jenkins/jenkins:lts</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上述配置中，</p><p><code>--name</code>，自定义容器名称；</p><p><code>-p</code>，宿主机与容器直接端口映射，Jenkins 容器默认端口就是 8080，不需要修改。50000 端口用于 Jenkins 代理通信，不需要修改；</p><p><code>-v</code>，将宿主机目录挂载到 Jenkins 容器的配置目录下，这样可以便于后续迁移，如果容器删除或者在其他服务器部署，保存宿主机的目录下的文件即可恢复；</p><p><code>-e</code>，分别是 Jenkins URL 配置和跨域配置，URL 即域名访问，与后续 Nginx 配置一起使用，非必要。跨域配置是为了解决高版本 Jenkins 配置过程 403 等异常问题，禁止跨域保护可能存在安全风险，如果没问题，可以不加，非必要。</p><h2 id="nginx-配置" tabindex="-1"><a class="header-anchor" href="#nginx-配置"><span>Nginx 配置</span></a></h2><p>使用 nginx 时，必须要配置反向代理，配置方式如下：</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">    server</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> {</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">        listen</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">   80</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">        server_name</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">  your_domain</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">        location</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> =</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> /</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> {</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">            proxy_pass</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> http://localhost:18080</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">        }</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">        </span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">        location</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> ~</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> .</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">*</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> {</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">            proxy_pass</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> http://localhost:18080</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">            proxy_redirect</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">     default</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">            proxy_set_header</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">   Host</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">               $host</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">:</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">$server_port</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">            proxy_set_header</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">   X-Real-IP</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">          $remote_addr</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">            proxy_set_header</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> 	 X-Forwarded-Host</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">   $host</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">:</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">$server_port</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">            proxy_set_header</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">   X-Forwarded-Server</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> $host</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">            proxy_set_header</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">   X-Forwarded-For</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">    $proxy_add_x_forwarded_for</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">            proxy_set_header</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">   X-Forwarded-Proto</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">  $scheme</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">        }</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    }</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Jenkins 官方文档，关于反向代理的说明，不配置或者反向代理配置错误都可能在管理页面有错误信息提示。</p><blockquote><p><a href="https://www.jenkins.io/doc/book/system-administration/reverse-proxy-configuration-troubleshooting/" target="_blank" rel="noopener noreferrer">https://www.jenkins.io/doc/book/system-administration/reverse-proxy-configuration-troubleshooting/</a></p></blockquote><p>另外反向代理错误，还有一个原因就是 Jenkins URL 设置错误，如果开启了 https，要在设置中将 URL 改为 https://your_domain.com/ 。</p><h2 id="jenkins-配置" tabindex="-1"><a class="header-anchor" href="#jenkins-配置"><span>Jenkins 配置</span></a></h2><h3 id="初始化" tabindex="-1"><a class="header-anchor" href="#初始化"><span>初始化</span></a></h3><p>Jenkins 镜像运行后，可以可以通过域名访问。Jenkins 需要花费一点时间完成初始化配置，完成配置后，可以进入引导流程。</p><p><img src="`+t+'" alt=""></p><h3 id="密码" tabindex="-1"><a class="header-anchor" href="#密码"><span>密码</span></a></h3><p><img src="'+p+'" alt=""></p><p>密码在容器的 /var/jenkins_home/ 目录下，宿主机看个人设置，我这里是在 /usr/local/project/personal_website/jenkins/jenkins_home/ 目录下。</p><p>cat /usr/local/project/personal_website/jenkins/jenkins_home/secrets/initialAdminPassword 即可得到初始管理员密码，页面输入密码，进入插件安装页面。</p><h3 id="插件" tabindex="-1"><a class="header-anchor" href="#插件"><span>插件</span></a></h3><p><img src="'+l+'" alt=""></p><p>这里选择了第二个，选择插件来安装。</p><p><img src="'+h+'" alt=""></p><p>根据自身需要选择安装，我这里默认，直接按照。如果后续有需要，可以再安装，没有影响，然后等待安装完成即可。</p><p><img src="'+r+'" alt=""></p><h3 id="管理员配置" tabindex="-1"><a class="header-anchor" href="#管理员配置"><span>管理员配置</span></a></h3><p>按照个人情况，配置管理员信息。</p><p>配置完管理员后，就只能通过管理员进行登录了。</p><p><img src="'+k+'" alt=""></p><h3 id="实例配置" tabindex="-1"><a class="header-anchor" href="#实例配置"><span>实例配置</span></a></h3><p>配置 Jenkins URL，因为在 Jenkins 容器启动时已经配置，这里直接确认即可。</p><p><img src="'+d+'" alt=""></p><h3 id="完成配置" tabindex="-1"><a class="header-anchor" href="#完成配置"><span>完成配置</span></a></h3><p><img src="'+o+'" alt=""></p><p><img src="'+c+'" alt=""></p><h2 id="安全配置" tabindex="-1"><a class="header-anchor" href="#安全配置"><span>安全配置</span></a></h2><p>Jenkins 涉及的内容与服务器直接关系，加上 Jenkins 有很多漏洞，公网上使用 Jenkins 尤其需要注意。</p><h3 id="ssl" tabindex="-1"><a class="header-anchor" href="#ssl"><span>SSL</span></a></h3><p>SSL证书配置无需过多解释，https安全性要比http要高得多。</p><blockquote><p>具体配置可以参考后面的博文。</p></blockquote><h3 id="节点" tabindex="-1"><a class="header-anchor" href="#节点"><span>节点</span></a></h3><p><img src="'+g+'" alt=""></p><p>Jenkins 默认配置完成 后，会提示在主节点上执行构建有安全隐患，所以可以配置从节点，用于构建任务。</p><p>默认情况下，只有一个 master 主节点。</p><p><img src="'+m+'" alt=""></p><p>对于个人使用来说，也用不上集群构建，默认主节点即可。</p>',56)]))}const v=i(y,[["render",b]]),f=JSON.parse('{"path":"/article/docker-deploy-jenkins/","title":"Docker 部署 Jenkins","lang":"zh-CN","frontmatter":{"title":"Docker 部署 Jenkins","createTime":"2024/08/24 15:47:55","permalink":"/article/docker-deploy-jenkins/","excerpt":"写在前面介绍如何在 Docker 中部署 Jenkins，包括拉取镜像、运行容器、配置 Nginx 反向代理、初始化、安装插件、配置管理员信息以及安全设置。安装 Jenkins 镜像拉取镜像docker pull jenkins/jenkins:lts目前 docker 被墙，使用 docke...","outline":[2,6],"tags":["Docker","Jenkins"],"description":"写在前面 介绍如何在 Docker 中部署 Jenkins，包括拉取镜像、运行容器、配置 Nginx 反向代理、初始化、安装插件、配置管理员信息以及安全设置。 安装 Jenkins 镜像 拉取镜像 目前 docker 被墙，使用 docker pull 拉取 certbot 镜像会失败，可以使用自行查找第三方镜像仓库。 我这里使用的是阿里云的镜像加速服...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Docker 部署 Jenkins\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-11-30T13:15:27.000Z\\",\\"author\\":[]}"],["meta",{"property":"og:url","content":"https://blog.ifback.com/article/docker-deploy-jenkins/"}],["meta",{"property":"og:site_name","content":"青何博客"}],["meta",{"property":"og:title","content":"Docker 部署 Jenkins"}],["meta",{"property":"og:description","content":"写在前面 介绍如何在 Docker 中部署 Jenkins，包括拉取镜像、运行容器、配置 Nginx 反向代理、初始化、安装插件、配置管理员信息以及安全设置。 安装 Jenkins 镜像 拉取镜像 目前 docker 被墙，使用 docker pull 拉取 certbot 镜像会失败，可以使用自行查找第三方镜像仓库。 我这里使用的是阿里云的镜像加速服..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-11-30T13:15:27.000Z"}],["meta",{"property":"article:tag","content":"Jenkins"}],["meta",{"property":"article:tag","content":"Docker"}],["meta",{"property":"article:modified_time","content":"2024-11-30T13:15:27.000Z"}]]},"readingTime":{"minutes":3.73,"words":1120},"git":{"updatedTime":1732972527000,"contributors":[{"name":"SingleMoonlight","username":"SingleMoonlight","email":"winston.wyx@foxmail.com","commits":5,"avatar":"https://avatars.githubusercontent.com/SingleMoonlight?v=4","url":"https://github.com/SingleMoonlight"}]},"autoDesc":true,"filePathRelative":"编程/Docker 部署 Jenkins.md","headers":[],"categoryList":[{"id":"41282b","sort":10007,"name":"编程"}]}');export{v as comp,f as data};
