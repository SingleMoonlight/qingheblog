import{_ as i,c as a,a as e,o as n}from"./app-WIG124Xj.js";const t="/assets/1736344372540-dceadfb2-200b-4fb3-9398-f1709d323656-ZSFCbHtt.png",l="/assets/1736344417310-b6f9c10c-4ad1-48a7-9644-9e25d0961776-BBYAfTln.png",p="/assets/1736345030863-f6bbeda6-0407-434a-80fc-522670f8c404-CBBrrNXf.png",h="/assets/1736345144529-eb986b06-3698-4027-8995-d9afa7de00ba-bg8BaOjm.png",r="/assets/1736346947094-3b8f3c7a-ffcc-4d7d-9298-0e60e5f9557a-Dv4sjgmX.png",d="/assets/1736347859787-8b548f6a-9d1c-4560-9dd3-e9f96b8e1f82-Cnm4ffsr.png",c="/assets/1736347943717-b4f16c8a-325b-483f-acc6-156098d5010f-C3ZmluDV.png",o="/assets/1736348266519-7455ca78-12ac-461c-9e41-62b672634f8d-DxxNhXF2.png",k={};function u(g,s){return n(),a("div",null,s[0]||(s[0]=[e('<h2 id="写在前面" tabindex="-1"><a class="header-anchor" href="#写在前面"><span>写在前面</span></a></h2><p>为了满足自己的使用需求，这段时间抽空开发了一个 VS Code 插件，开发完成后准备打包发布。看了一下发布方式，觉得使用 vsce 命令行工具发布 VS Code 插件步骤比较繁琐，还是借助 GitHub Action 自动发布更优雅，整体过程和自动发布 npm 包基本相同，感兴趣的可以看看这一篇<a href="https://blog.ifback.com/article/automatically-publish-npm-packages-using-github-action/" target="_blank" rel="noopener noreferrer">文章</a>。</p><h2 id="创建-vs-code-publisher" tabindex="-1"><a class="header-anchor" href="#创建-vs-code-publisher"><span>创建 VS Code publisher</span></a></h2><p>去微软的插件市场<a href="https://marketplace.visualstudio.com/manage/createpublisher" target="_blank" rel="noopener noreferrer">官网</a>注册创建发布者，里面的内容只有 Name 和 ID 是必填的，其他信息都可以不填。这里的 ID 在后续发布插件的时候会用到。</p><p><img src="'+t+'" alt=""></p><p>填好信息后，点击创建即可。需要特别注意的是，创建 publisher 用到了谷歌的验证服务，需要保证网络能够访问谷歌验证服务，否则点击创建后是没有反应的。</p><p>创建完成后就会看到下面的界面，此时还是没有插件的。</p><p><img src="'+l+'" alt=""></p><h2 id="生成个人访问-token" tabindex="-1"><a class="header-anchor" href="#生成个人访问-token"><span>生成个人访问 Token</span></a></h2><p>VC Code 的应用市场基于微软自己的 Azure DevOps ，插件的身份验证、托管和管理都是在这里。如果想自动化发布插件，需要在这里创建一个 Token，后面 GitHub Action 会用到。</p><p>访问 <a href="https://aka.ms/SignupAzureDevOps" target="_blank" rel="noopener noreferrer">Azure DevOps</a> ，如果从来没有使用过 Azure，按照提示下一步即可（登录微软账号）。</p><p>登录完成后，在页面右上角个人设置里，选择 <code>Personal Access Tokens</code> ，然后点击创建新的 Token。</p><p><img src="'+p+'" alt=""></p><p>给 Token 随便取一个名字，下面选项中，Organization 选择所有，Scopes 选择全部权限。</p><p><img src="'+h+`" alt=""></p><p>填好之后点击创建，生成的 Token 只会显示一次，记得把复制下来。</p><h2 id="插件配置" tabindex="-1"><a class="header-anchor" href="#插件配置"><span>插件配置</span></a></h2><p>在插件的 package.json 中，填写此前创建的 VS Code publisher 的 ID。</p><div class="language-json line-numbers-mode" data-highlighter="shiki" data-ext="json" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">{</span></span>
<span class="line"><span style="--shiki-light:#99841877;--shiki-dark:#B8A96577;">  &quot;</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">publisher</span><span style="--shiki-light:#99841877;--shiki-dark:#B8A96577;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">singlemoonlight</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="配置-github-action" tabindex="-1"><a class="header-anchor" href="#配置-github-action"><span>配置 GitHub Action</span></a></h2><h3 id="创建-github-仓库" tabindex="-1"><a class="header-anchor" href="#创建-github-仓库"><span>创建 GitHub 仓库</span></a></h3><p>创建好 GitHub 仓库，然后将插件源码推送到仓库中，这一步不必多说。</p><h3 id="设置-github-secret" tabindex="-1"><a class="header-anchor" href="#设置-github-secret"><span>设置 GitHub Secret</span></a></h3><p>在 GitHub 仓库中，进入 <code>Settings</code> -&gt; <code>Secrets and variables</code> -&gt; <code>Actions</code>。</p><p>添加一个密钥，名字比如就叫 VSCE_PAT ，并将前面创建的生成的个人访问 Token 作为值。</p><p><img src="`+r+`" alt=""></p><h3 id="创建-github-actions-工作流" tabindex="-1"><a class="header-anchor" href="#创建-github-actions-工作流"><span>创建 GitHub Actions 工作流</span></a></h3><p>在仓库的 .github/workflows 目录下创建一个 YAML 文件，例如 publish.yml。</p><div class="language-json line-numbers-mode" data-highlighter="shiki" data-ext="json" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">name: Publish VS Code Extension</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">on:</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  push:</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    branches: </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">[</span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">master</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">]</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">jobs:</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  publish:</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    runs-on: ubuntu-latest</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    steps:</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    - name: Checkout repository</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">      uses: actions/checkout@v</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">4</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    - name: Setup Node.js</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">      uses: actions/setup-node@v</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">4</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">      with:</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">        node-version: </span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">20</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    - name: Install dependencies</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">      run: npm install</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    - name: Install vsce</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">      run: npm install -g vsce</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    - name: Publish to Visual Studio Code Marketplace</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">      run: vsce publish</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">      env:</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">        VSCE_PAT: \${{ secrets.VSCE_PAT }}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这里的触发条件是当推送新的提交到 master 分支时触发发布，可以自行修改。</p><p>创建完成后，将改 yml 改动推送到 GitHub，不出意外的话就能够完成第一次发布了，构建过程如下：</p><p><img src="`+d+'" alt=""></p><h2 id="查看成果" tabindex="-1"><a class="header-anchor" href="#查看成果"><span>查看成果</span></a></h2><p>GitHub Action 构建完成后，回到 VS Code 发布者<a href="https://marketplace.visualstudio.com/manage/publishers/" target="_blank" rel="noopener noreferrer">页面</a>，就能够看到刚刚发布的插件了。</p><p><img src="'+c+'" alt=""></p><p>打开 VS Code 的插件市场，搜索自己的插件，也能够搜到并安装。</p><p><img src="'+o+`" alt=""></p><h2 id="注意事项" tabindex="-1"><a class="header-anchor" href="#注意事项"><span>注意事项</span></a></h2><p>1、 创建 VS Code publisher 需要能够访问谷歌验证服务。</p><p>2、 插件的 package.json 中需要填写仓库信息，否则在发布插件的时候会出现下面的错误：</p><div class="language-json line-numbers-mode" data-highlighter="shiki" data-ext="json" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">Error: Couldn&#39;t detect the repository where this extension is published.</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>仓库信息示例：</p><div class="language-json line-numbers-mode" data-highlighter="shiki" data-ext="json" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">{</span></span>
<span class="line"><span style="--shiki-light:#99841877;--shiki-dark:#B8A96577;">  &quot;</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">repository</span><span style="--shiki-light:#99841877;--shiki-dark:#B8A96577;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#99841877;--shiki-dark:#B8A96577;">    &quot;</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">type</span><span style="--shiki-light:#99841877;--shiki-dark:#B8A96577;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">git</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#99841877;--shiki-dark:#B8A96577;">    &quot;</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">url</span><span style="--shiki-light:#99841877;--shiki-dark:#B8A96577;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">https://github.com/SingleMoonlight/crelation</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">  }</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>3、 如果后面插件有更新，直接 push 到 GitHub 即可，需要注意的是版本号需要递增，这部分规则和 npm 一样。</p>`,44)]))}const m=i(k,[["render",u]]),v=JSON.parse('{"path":"/article/automatically-publish-vscode-plugins-using-github-action/","title":"使用 GitHub Action 自动发布 VS Code 插件","lang":"zh-CN","frontmatter":{"title":"使用 GitHub Action 自动发布 VS Code 插件","createTime":"2025/01/07 16:01:03","permalink":"/article/automatically-publish-vscode-plugins-using-github-action/","excerpt":"写在前面为了满足自己的使用需求，这段时间抽空开发了一个 VS Code 插件，开发完成后准备打包发布。看了一下发布方式，觉得使用 vsce 命令行工具发布 VS Code 插件步骤比较繁琐，还是借助 GitHub Action 自动发布更优雅，整体过程和自动发布 npm 包基本相同，感兴趣的可...","outline":[2,6],"tags":["GitHub"],"description":"写在前面 为了满足自己的使用需求，这段时间抽空开发了一个 VS Code 插件，开发完成后准备打包发布。看了一下发布方式，觉得使用 vsce 命令行工具发布 VS Code 插件步骤比较繁琐，还是借助 GitHub Action 自动发布更优雅，整体过程和自动发布 npm 包基本相同，感兴趣的可以看看这一篇文章。 创建 VS Code publishe...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"使用 GitHub Action 自动发布 VS Code 插件\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-01-09T14:47:59.000Z\\",\\"author\\":[]}"],["meta",{"property":"og:url","content":"https://blog.ifback.com/article/automatically-publish-vscode-plugins-using-github-action/"}],["meta",{"property":"og:site_name","content":"青何博客"}],["meta",{"property":"og:title","content":"使用 GitHub Action 自动发布 VS Code 插件"}],["meta",{"property":"og:description","content":"写在前面 为了满足自己的使用需求，这段时间抽空开发了一个 VS Code 插件，开发完成后准备打包发布。看了一下发布方式，觉得使用 vsce 命令行工具发布 VS Code 插件步骤比较繁琐，还是借助 GitHub Action 自动发布更优雅，整体过程和自动发布 npm 包基本相同，感兴趣的可以看看这一篇文章。 创建 VS Code publishe..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-01-09T14:47:59.000Z"}],["meta",{"property":"article:tag","content":"GitHub"}],["meta",{"property":"article:modified_time","content":"2025-01-09T14:47:59.000Z"}]]},"readingTime":{"minutes":3.56,"words":1067},"git":{"updatedTime":1736434079000,"contributors":[{"name":"SingleMoonlight","username":"SingleMoonlight","email":"winston.wyx@foxmail.com","commits":1,"avatar":"https://avatars.githubusercontent.com/SingleMoonlight?v=4","url":"https://github.com/SingleMoonlight"}]},"autoDesc":true,"filePathRelative":"编程/使用 GitHub Action 自动发布 VS Code 插件.md","headers":[],"categoryList":[{"id":"41282b","sort":10007,"name":"编程"}]}');export{m as comp,v as data};
